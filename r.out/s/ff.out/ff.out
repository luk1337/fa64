#!/bin/sh
### FDE.AI v4 | FeraVolt. 2019 ###
. /fde.ai/s/libfde.so;
MFR=$((R/250));if [ "$MFR" -lt "2" ];then MFR="2";fi;FM=$((R*1024/9));if [ "$S" -le "18" ];then RR="512";RW="1024";else RR="128";RW="256";fi;DIRT="$R";if [ "$DIRT" -le "1000" ];then DIRT="1000";fi;if [ -e /sys/kernel/debug/sched_features ];then $B echo "NO_GENTLE_FAIR_SLEEPERS">/sys/kernel/debug/sched_features;$B echo "NO_HRTICK">/sys/kernel/debug/sched_features;$B echo "NO_DOUBLE_TICK">/sys/kernel/debug/sched_features;$B echo "NO_RT_RUNTIME_SHARE">/sys/kernel/debug/sched_features;$B echo "UTIL_EST">/sys/kernel/debug/sched_features;$B echo "ARCH_CAPACITY">/sys/kernel/debug/sched_features;$B echo "ARCH_POWER">/sys/kernel/debug/sched_features;$B echo "ENERGY_AWARE">/sys/kernel/debug/sched_features;if [ -n "$RUS" ];then flog "- Оптимизированы планировщики ядра";else flog "- Kernel schedulers optimized";fi;fi;if [ -e /sys/kernel/sched/arch_power ];then $B echo "1">/sys/kernel/sched/arch_power;if [ -n "$RUS" ];then flog "- Активировано ARCH энергосбережение";else flog "- ARCH power-saving activated";fi;fi;if [ -e /sys/kernel/sched/gentle_fair_sleepers ];then $B echo "0">/sys/kernel/sched/gentle_fair_sleepers;if [ -n "$RUS" ];then flog "- Отключен режим плавного засыпания";else flog "- Gentle sleep mode deactivated";fi;fi;if [ -e /sys/kernel/debug/tracing/tracing_on ];then $B echo "0">/sys/kernel/debug/tracing/tracing_on;if [ -n "$RUS" ];then flog "- Отключена трассировка ядра";else flog "- Kernel tracing deactivated";fi;fi;if [ -e /proc/sys/kernel/sched_schedstats ];then $B echo "0">/proc/sys/kernel/sched_schedstats;if [ -n "$RUS" ];then flog "- Отключена статистика планировщиков ядра";else flog "- Kernel schedulers stats deactivated";fi;fi;if [ -e /proc/sys/vm/stat_interval ];then $B echo "90">/proc/sys/vm/stat_interval;if [ -n "$RUS" ];then flog "- Отключена статистика планировщиков ядра";else flog "- Kernel schedulers stats deactivated";fi;fi;if [ -e /proc/sys/kernel/random/read_wakeup_threshold ];then $B echo "$RR">/proc/sys/kernel/random/read_wakeup_threshold;$B sysctl -e -w kernel.random.read_wakeup_threshold=$RR;$B echo "$RW">/proc/sys/kernel/random/write_wakeup_threshold;$B sysctl -e -w kernel.random.write_wakeup_threshold=$RW;if [ -n "$RUS" ];then flog "- Оптимизирован генератор энтропии";else flog "- Entropy generator optimized";fi;fi;if [ -e /proc/sys/vm/vfs_cache_pressure ];then if [ "$R" -ge "4500" ];then $B echo "90">/proc/sys/vm/vfs_cache_pressure;$B sysctl -e -w vm.vfs_cache_pressure=90;else $B echo "99">/proc/sys/vm/vfs_cache_pressure;$B sysctl -e -w vm.vfs_cache_pressure=99;fi;if [ -n "$RUS" ];then flog "- Оптимизирован кэш файловых систем";else flog "- File system cache optimized";fi;fi;if [ -e /proc/sys/vm/min_free_kbytes ];then $B echo "$((MFR*1024))">/proc/sys/vm/min_free_kbytes;$B sysctl -e -w vm.min_free_kbytes=$((MFR*1024));$B echo "$((MFR*2048))">/proc/sys/vm/extra_free_kbytes;$B sysctl -e -w vm.extra_free_kbytes=$((MFR*2048));if [ -n "$RUS" ];then flog "- Оптимизировано распределение ОЗУ ядром";else flog "- RAM kernel allocation optimized";fi;fi;if [ -e /proc/sys/vm/oom_kill_allocating_task ];then $B echo "0">/proc/sys/vm/oom_kill_allocating_task;$B sysctl -e -w vm.oom_kill_allocating_task=0;if [ -n "$RUS" ];then flog "- Отключен OOM killer ядра";else flog "- Kernel OOM killer deactivated";fi;fi;if [ -e /proc/sys/vm/dirty_ratio ];then $B echo "300">/proc/sys/vm/dirty_expire_centisecs;$B sysctl -e -w vm.dirty_expire_centisecs=300;$B echo "$DIRT">/proc/sys/vm/dirty_writeback_centisecs;$B sysctl -e -w vm.dirty_writeback_centisecs=$DIRT;if [ "$R" -ge "4500" ];then $B echo "18">/proc/sys/vm/dirty_ratio;$B sysctl -e -w vm.dirty_ratio=18;$B echo "9">/proc/sys/vm/dirty_background_ratio;$B sysctl -e -w vm.dirty_background_ratio=9;else $B echo "45">/proc/sys/vm/dirty_ratio;$B sysctl -e -w vm.dirty_ratio=45;$B echo "15">/proc/sys/vm/dirty_background_ratio;$B sysctl -e -w vm.dirty_background_ratio=15;fi;if [ -n "$RUS" ];then flog "- Оптимизирован кэш VM";else flog "- VM cache optimized";fi;fi;if [ -e /proc/sys/vm/panic_on_oom ];then $B echo "0">/proc/sys/vm/panic_on_oom;$B sysctl -e -w vm.panic_on_oom=0;if [ -n "$RUS" ];then flog "- Отключена паника VM";else flog "- VM panic deactivated";fi;fi;if [ -e /proc/sys/vm/block_dump ];then $B echo "0">/proc/sys/vm/block_dump;$B sysctl -e -w vm.block_dump=0;if [ -n "$RUS" ];then flog "- Отключен дамп VM";else flog "- VM dump deactivated";fi;fi;if [ -e /proc/sys/vm/page-cluster ];then $B echo "0">/proc/sys/vm/page-cluster;$B sysctl -e -w vm.page-cluster=0;$B echo "1">/proc/sys/vm/laptop_mode;$B sysctl -e -w vm.laptop_mode=1;$B echo "900">/proc/sys/vm/stat_interval;$B sysctl -e -w vm.stat_interval=900;if [ -n "$RUS" ];then flog "- Оптимизация скорости чтения/записи VM";else flog "- VM read/write speed optimized";fi;fi;if [ -e /proc/sys/vm/compact_memory ];then $B echo "1">/proc/sys/vm/compact_memory;$B sysctl -e -w vm.compact_memory=1;$B echo "1">/proc/sys/vm/compact_unevictable_allowed;$B sysctl -e -w vm.compact_unevictable_allowed=1;if [ -n "$RUS" ];then flog "- Активация и оптимизация уплотнения памяти VM";else flog "- VM memory compaction activated & optimized";fi;fi;if [ -e /proc/sys/vm/oom_dump_tasks ];then $B echo "0">/proc/sys/vm/oom_dump_tasks;$B sysctl -e -w vm.oom_dump_tasks=0;if [ -n "$RUS" ];then flog "- Отключение дампов задач";else flog "- Task dumps deactivated";fi;fi;if [ -e /proc/sys/vm/highmem_is_dirtyable ];then $B echo "1">/proc/sys/vm/highmem_is_dirtyable;$B sysctl -e -w vm.highmem_is_dirtyable=1;if [ -n "$RUS" ];then flog "- Оптимизация регионов памяти VM";else flog "- VM memory regions optimized";fi;fi;if [ -e /proc/sys/fs/lease-break-time ];then $B echo "1">/proc/sys/fs/leases-enable;$B sysctl -e -w fs.leases-enable=1;$B echo "10">/proc/sys/fs/lease-break-time;$B sysctl -e -w fs.lease-break-time=10;$B echo "$FM">/proc/sys/fs/file-max;$B sysctl -e -w fs.file-max=$FM;$B echo "0">/proc/sys/fs/dir-notify-enable;$B sysctl -e -w fs.dir-notify-enable=0;if [ -n "$RUS" ];then flog "- Оптимизация параметров ядра для файловых систем";else flog "- File system kernel parameters optimized";fi;fi;if [ -e /proc/sys/kernel/hung_task_timeout_secs ];then $B echo "0">/proc/sys/kernel/hung_task_timeout_secs;$B sysctl -e -w kernel.hung_task_timeout_secs=0;if [ -n "$RUS" ];then flog "- Отключена проверка зависших задач для ядра";else flog "- Kernel hung-task check deactivated";fi;fi;if [ -e /proc/sys/kernel/panic ];then $B echo "0">/proc/sys/kernel/panic;$B sysctl -e -w kernel.panic=0;$B echo "0">/proc/sys/kernel/softlockup_panic;$B sysctl -e -w kernel.softlockup_panic=0;$B echo "0">/proc/sys/kernel/panic_on_oops;$B sysctl -e -w kernel.panic_on_oops=0;if [ -n "$RUS" ];then flog "- Отключена паника ядра";else flog "- Kernel panic deactivated";fi;fi;if [ -e /proc/sys/kernel/nmi_watchdog ];then $B echo "0">/proc/sys/kernel/nmi_watchdog;$B sysctl -e -w kernel.nmi_watchdog=0;if [ -n "$RUS" ];then flog "- Отключено наблюдение за ядром";else flog "- Kernel watchdog deactivated";fi;fi;if [ -e /proc/sys/kernel/watchdog ];then $B echo "0">/proc/sys/kernel/watchdog;$B sysctl -e -w kernel.watchdog=0;if [ -n "$RUS" ];then flog "- Отключено наблюдение за ядром";else flog "- Kernel watchdog deactivated";fi;fi;if [ -e /proc/sys/kernel/sched_walt_init_task_load_pct ];then $B echo "5">/proc/sys/kernel/sched_walt_init_task_load_pct;$B sysctl -e -w kernel.sched_walt_init_task_load_pct=5;$B echo "0">/proc/sys/kernel/sched_walt_rotate_big_tasks;$B sysctl -e -w kernel.sched_walt_rotate_big_tasks=0;if [ -n "$RUS" ];then flog "- Оптимизация EAS";else flog "- EAS optimized";fi;fi;if [ -e /proc/sys/kernel/sched_tunable_scaling ];then $B echo "0">/proc/sys/kernel/sched_tunable_scaling;$B sysctl -e -w kernel.sched_tunable_scaling=0;if [ -n "$RUS" ];then flog "- Отключено увеличение параметров планировщиков";else flog "- Sched parameters scaling deactivated";fi;fi;if [ -e /proc/sys/kernel/sched_enable_power_aware ];then $B echo "1">/proc/sys/kernel/sched_enable_power_aware;if [ -n "$RUS" ];then flog "- Активированы энергосберегающие планировщики ядра";else flog "- Power aware kernel scheduling activated";fi;fi;if [ "$C" -ge "2" ];then if [ -e /proc/sys/kernel/sched_smt_power_savings ];then $B echo "0">/proc/sys/kernel/sched_smt_power_savings;fi;if [ -e /proc/sys/kernel/sched_mc_power_savings ];then $B echo "0">/proc/sys/kernel/sched_mc_power_savings;if [ -n "$RUS" ];then flog "- Оптимизация планировщиков для много-ядерных ЦП";else flog "- Multi-core CPU scheduling optimizations";fi;fi;fi;if [ -e /proc/sys/kernel/sched_ravg_hist_size ];then $B echo "3">/proc/sys/kernel/sched_ravg_hist_size;$B echo "3">/proc/sys/kernel/sched_window_stats_policy;if [ -n "$RUS" ];then flog "- Оптимизация планировщика HMP";else flog "- HMP scheduler optimized";fi;fi;exit;
